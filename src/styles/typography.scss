@use "sass:map";

$font-family: "Open Sans", sans-serif;
$font-scale: (
	0: (
		font-size: 10,
		line-height: 14,
		letter-spacing: 0.02em
	),
	1: (
		font-size: 12,
		line-height: 16,
		letter-spacing: 0.02em
	),
	2: (
		font-size: 14,
		line-height: 18,
		letter-spacing: 0.02em
	),
	3: (
		font-size: 16,
		line-height: 22,
		letter-spacing: 0.02em
	),
	4: (
		font-size: 18,
		line-height: 18,
		letter-spacing: initial
	),
	5: (
		font-size: 20,
		line-height: 27,
		letter-spacing: initial
	),
	6: (
		font-size: 32,
		line-height: 44,
		letter-spacing: initial
	),

	7: (
		font-size: 36,
		line-height: 49,
		letter-spacing: initial
	),
	8: (
		font-size: 40,
		line-height: 54,
		letter-spacing: initial
	),
	9: (
		font-size: 64,
		line-height: 64,
		letter-spacing: initial
	)
) !default;

@function get-font-property($level, $property) {
	@return convert-to-px(map.get($font-scale, $level, $property));
}

@function convert-to-px($value) {
	@if (type-of($value) == number and $value != 0) {
		$value: if(unitless($value), $value * 1px, $value);
	}
	@return $value;
}

@mixin set-font-size($size, $line-height: $size, $letter-spacing) {
	font-size: convert-to-px($size);
	line-height: convert-to-px($line-height);
	letter-spacing: $letter-spacing;
}

@mixin font-size($level) {
	@include set-font-size(get-font-property($level, font-size), get-font-property($level, line-height), get-font-property($level, letter-spacing));
}

@mixin font-weight($level: "bold") {
	@if $level == "semi-bold" {
		font-weight: 500;
	} @else if $level == "normal" {
		font-weight: 400; 
	} @else if $level == "thin" {
		font-weight: 300;
	} @else if $level == "bold-600" {
		font-weight: 600;
	} @else {
		font-weight: 700;
	}
}
